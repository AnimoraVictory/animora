version: "3.8"

services:
  api:
    build:
      context: ./backend-go
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./.env:/app/.env
    # environment:
    #   - ENV=${ENV}
    #   - SEED=${SEED}
    #   - DATABASE_URL=${DATABASE_URL}
    #   - JWT_SECRET=${JWT_SECRET}
    #   - AWS_COGNITO_CLIENT_ID=${AWS_COGNITO_CLIENT_ID}
    #   - AWS_COGNITO_POOL_ID=${AWS_COGNITO_POOL_ID}
    #   - AWS_REGION=${AWS_REGION}
    #   - AWS_COGNITO_CLIENT_SECRET=${AWS_COGNITO_CLIENT_SECRET}
    #   - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    #   - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    #   - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # restart: always

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    restart: always

volumes:
  postgres_data:
