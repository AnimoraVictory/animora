services:
  api:
    build:
      context: ./backend-go
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./.env:/app/.env
    environment:
      - SEED=${SEED}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # restart: always

  # search_engine:
  #   build:
  #     context: ./algorithm
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./.env:/app/.env
  #   environment:
  #     - TARGET_APP=recommend_system.main:app
  #     - DB_USER=myuser
  #     - DB_PASSWORD=mypass
  #     - DB_NAME=mydatabase
  #     - DB_HOST=db
  #     - DB_PORT=5432
  #     - HF_TOKEN=${HF_TOKEN}
  #     - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
  #   depends_on:
  #     - db

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypass
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    restart: always

volumes:
  postgres_data:
